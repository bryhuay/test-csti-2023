openapi: 3.0.3
info:
  title: Reto Tecnico 
  description: |-
    Esta es la documentacion de los servicios creados en los microservicios user-microservice(3000) y exhange-rate-microservice(3001), los cuales trabajan junto para poder validar token y realizar conversion de monedas. Se detalla en esta documentacion el uso de los request. 
  version: 1.0.11
 
servers:
  - url: http://localhost:3000
  - url: http://localhost:3001

tags:
  - name: user
    description: Servicios de usuario
  - name: money
    description: Servicios de tipo de cambio
paths:
  /user/create:
    post:
      tags:
        - user
      summary: Crear usuario
      description: Permite crear un usuario para posterior login.
      operationId: createUser
      requestBody:
        description: Objeto con datos del usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
  /user/login:
    post:
      tags:
        - user
      summary: Permite obtener token de autenticacion
      description: ''
      operationId: loginUser
      requestBody:
        description: Objeto con datos de autenticacion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
  /money/sale:
    post:
      tags:
        - money
      summary: Permite realizar cambio de monedas
      description: ''
      operationId: saleMoney
      requestBody:
        description: Objetos con datos de monedas y monto de cambio
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneySaleRequest'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneySaleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
      xml:
        name: user
    UserCreateRequest:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
      xml:
        name: user
    UserCreateResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Created success
        data: 
          type: object
          example: 
            id: 1
            firstName: John
            lastName: James
            email: john@email.com
            
      xml:
        name: user
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
      xml:
        name: user
    UserLoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Auth success
        data: 
          type: object
          example: 
            accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZmlyc3ROYW1lIjoiSmVyc29uIiwibGFzdE5hbWUiOiJIdWF5dGEiLCJlbWFpbCI6ImplcnNvbjRAZ21haWwuY29tIiwiaWF0IjoxNzAyNTc5NTkxLCJleHAiOjE3MDI1OTM5OTF9.s9pyh70ToaP8yfARpqrv3w3da94nZ3w1RA81kzoIFlw
            
      xml:
        name: user
    Money:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        prefix:
          type: string
          example: USD
        prefixChange:
          type: string
          example: PEN
        salePrice: 
          type: number
          example: 3.87
      xml:
        name: money
    MoneySaleRequest:
      type: object
      properties:
        prefix:
          type: string
          example: USD
        prefixChange:
          type: string
          example: PEN
        amount: 
          type: number
          example: 3.87
      xml:
        name: money
    MoneySaleResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Created success
        data: 
          type: object
          example: 
            prefix: EUR,
            prefixChange: PEN,
            salePrice: 4.5,
            amount: 45.6,
            totalToChange: 205.20000000000002
      xml:
        name: money   
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'